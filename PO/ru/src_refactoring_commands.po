msgid ""
msgstr ""
"Project-Id-Version: src_refactoring_commands\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-12-14 09:52-0500\n"
"PO-Revision-Date: 2018-03-14 21:01+0300\n"
"Last-Translator: alexandr\n"
"Language-Team: Russian\n"
"Language: ru\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=3; plural=(n%10==1 && n%100!=11 ? 0 : n%10 >= 2 && n"
"%10<=4 &&(n%100<10||n%100 >= 20)? 1 : 2);\n"
"X-Generator: Loco https://localise.biz\n"
"X-Loco-Source-Locale: en\n"
"X-Loco-Project-Id: 44097\n"
"X-Loco-Api-Version: 1.0.18 20180307-1\n"

#: src/refactoring/commands.py:72
msgid ""
" Rename currently selected symbol.  The new_name argument is used as the\n"
"    default for the name field if specified.  Aternatively, the transform "
"argument\n"
"    may be set to camel-upper for UpperCamelCase, camel-lower for "
"lowerCamelCase,\n"
"    under-lower for under_scored_name, or under-upper for UNDER_SCORED_NAME."
msgstr ""
" Переименовать выбранное обозначение.  Аргумент new_name используется\n"
"     по умолчанию для поля name, если он указан.  По Вашему желанию во "
"время\n"
"     преобразования аргумент может быть отформатирован в стиле \"Горбатый "
"Регистр\"\n"
"     camel-upper для UpperCamelCase, camel-lower для lowerCamelCase,\n"
"     under-lower для under_scored_name, или under-upper для "
"UNDER_SCORED_NAME."

#: src/refactoring/commands.py:139
msgid ""
" Rename last symbol clicked.  See rename_symbol for details on arguments."
msgstr ""
"Переименовать последний символ. Подробнее о аргументах см. В файле "
"rename_symbol."

#: src/refactoring/commands.py:147
msgid ""
" Move the currently selected symbol to another module, class, \n"
"    or function.  The new_filename and new_scope_name arguments are used\n"
"    as default values in the filename and scope name fields if specified. "
msgstr ""
" Переместить выбранное обозначение в другой модуль, класс или функцию.\n"
"    Аргументы new_filename и new_scope_name используются в качестве \n"
"    значений по умолчанию в полях Имя файла и имя области, \n"
"    если они указаны. "

#: src/refactoring/commands.py:168
msgid " Move last symbol clicked to another module, class, or function. "
msgstr ""
" Переместить последнее обозначение в другой модуль, класс или функцию. "

#: src/refactoring/commands.py:176
msgid ""
" Returns the active editor and line range selected.  Returns \n"
"    None, (-1, -1) if nothing is selected. "
msgstr ""
"Возвращает активный редактор и диапазон строк. Возвращает\n"
"    None, (-1, -1), если ничего не выбрано."

#: src/refactoring/commands.py:193
msgid ""
" Extract selected lines to a new function or method.  The new_name\n"
"    argument is used as the default for the name field if specified. "
msgstr ""
"Извлеките выделенные строки в новую функцию или метод. \n"
"     Аргумент new_name используется как значение по умолчанию \n"
"     для поля имени, если оно указано."

#: src/refactoring/commands.py:207
msgid ""
" Only check for a non-blank lines; more expensive tests are done\n"
"    later. "
msgstr ""
" Проверять только непустые строки; более ресурсоемкие тесты выполняются "
"позже. "

#: src/refactoring/commands.py:222
msgid ""
" Introduce named variable set to the current selected expression or\n"
"    to the range in the active editor specified by pos_range.  The new_name\n"
"    argument is used as the default variable name if it is specified. "
msgstr ""
"Внесите значение переменной named в текущее выбранное выражение или в "
"диапазон в активном редакторе, заданном pos_range. Аргумент new_name "
"используется в качестве имени переменной по умолчанию, если он указан."

#: src/refactoring/commands.py:240
#, fuzzy
msgid ""
" Rename module currently open in the editor. The new_filename\n"
"    argument is used as the default new filename if it is specified.\n"
"    Renaming packages is not supported "
msgstr ""
"Извлеките выделенные строки в новую функцию или метод. \n"
"     Аргумент new_name используется как значение по умолчанию \n"
"     для поля имени, если оно указано."

#: src/refactoring/commands.py:269
msgid ""
" Start delete symbol refactoring. Uses given symbol if not None, name\n"
"    clicked if clicked is true, or name at cursor in current editor "
msgstr ""

#: src/refactoring/commands.py:292
msgid " Internal command to generate items for refactoring menu "
msgstr ""

#: src/refactoring/commands.py:295
msgid "Delete Symbol"
msgstr ""

#: src/refactoring/commands.py:297
msgid "Symbol"
msgstr ""

#: src/refactoring/commands.py:300
msgid "Class"
msgstr ""

#: src/refactoring/commands.py:302
msgid "Method"
msgstr ""

#: src/refactoring/commands.py:304
msgid "Function"
msgstr ""

#: src/refactoring/commands.py:306
msgid "Argument"
msgstr ""

#: src/refactoring/commands.py:308
msgid "Imported Name"
msgstr ""

#: src/refactoring/commands.py:310
msgid "Variable"
msgstr ""

#: src/refactoring/commands.py:312
msgid "Attribute"
msgstr ""

#: src/refactoring/commands.py:314
msgid "Delete {}"
msgstr ""

#: src/refactoring/commands.py:323
msgid ""
" Return symbol for the delete-symbol command and what type of symbol\n"
"    it is. "
msgstr ""

#: src/refactoring/commands.py:360
msgid ""
" Find if tok is followed by := and return CFullyScopedName, kVariable if\n"
"      it is. None, None is returned if it isn't followed by := "
msgstr ""

#~ msgid ""
#~ " \n"
#~ "\n"
#~ "Copyright (c) 1999-2012, Archaeopteryx Software, Inc.  All rights "
#~ "reserved.\n"
#~ "\n"
#~ "Written by Stephan R.A. Deibel and John P. Ehresman\n"
#~ "\n"
#~ msgstr ""
#~ " \n"
#~ "\n"
#~ "Copyright (c) 1999-2018, Archaeopteryx Software, Inc.  Все права "
#~ "защищены.\n"
#~ "\n"
#~ "Written by Stephan R.A. Deibel and John P. Ehresman\n"
#~ "\n"
