# Module scripts_experimental translation file for language=fr
# Copyright (C) 2016 Wingware
# Wingware Python IDE -- www.wingware.com
#
msgid ""
msgstr ""
"Project-Id-Version: 6.0.0\n"
"POT-Creation-Date: 2016-11-18 10:52+EST\n"
"PO-Revision-Date: 2016-11-01 21:40+0100\n"
"Last-Translator: Jean Sanchez <jean.sanchez.fr@gmail.com>\n"
"Language-Team: None\n"
"Language: fr\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: pygettext.py 1.5\n"
"X-Generator: Poedit 1.8.11\n"
"X-Poedit-SourceCharset: UTF-8\n"

#: scripts/experimental.py:1
msgid ""
" Experimental commands that may be removed from Wing in the future.\n"
"\n"
"See the Scripting chapter of the manual for more information on writing \n"
"and using scripts.\n"
"\n"
"Copyright (c) 2005-2015, Wingware All rights reserved.\n"
"Copyright (c) 2005, Ken Kinder All rights reserved.\n"
"\n"
"Permission is hereby granted, free of charge, to any person obtaining\n"
"a copy of this software and associated documentation files (the\n"
"\"Software\"), to deal in the Software without restriction, including\n"
"without limitation the rights to use, copy, modify, merge, publish,\n"
"distribute, sublicense, and/or sell copies of the Software, and to\n"
"permit persons to whom the Software is furnished to do so, subject to\n"
"the following conditions:\n"
"\n"
"The above copyright notice and this permission notice shall be\n"
"included in all copies or substantial portions of the Software.\n"
"\n"
"THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n"
"EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n"
"MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n"
"IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n"
"CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n"
"TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n"
"SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n"
"\n"
msgstr ""

#: scripts/experimental.py:33
msgid " Support for a simple name callback for the autocompleter "
msgstr ""

#: scripts/experimental.py:41
msgid " Set a callback for a mime type -- use None to clear one. "
msgstr ""

#: scripts/experimental.py:59
msgid ""
" Signal handlerr invoked when editor is opened to set callback\n"
"        on internal object "
msgstr ""

#: scripts/experimental.py:75
msgid ""
" Install a callback for using a list of simple names for the autocomplete\n"
"    popup list for editors for the given mime type.  This an experimental "
"feature\n"
"    and may change in future releases.  The callback needs to take 2 "
"arguments:\n"
"    (internal-editor-object, ctx) and should return a list of strings to "
"use\n"
"    for autocompletion.  The ctx object will have the following attributes:\n"
"    \n"
"    lineno -- line number of the line with the cursor\n"
"    cursor_pos -- position of the cursor in the document\n"
"    start_pos -- position of the word's first character in the document\n"
"\n"
"    Currently this cannot be used for python documents\n"
"\n"
"    An example of using this from a script is::\n"
"    \n"
"      def _callback(ed, ctx):\n"
"        return ['one', 'two']\n"
"      wingapi.gApplication."
"ExecuteCommand('experimental_install_simple_names_callback',\n"
"                                          mtype='text/plain',\n"
"                                          callback=_callback)\n"
"                                          \n"
"    "
msgstr ""
