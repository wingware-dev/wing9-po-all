# translation of scripts_editor_extensions.po to German
# Module scripts_editor_extensions translation file for language=de
# Copyright (C) 2006 Archaeopteryx Software, Inc.
# Wing Python IDE -- wingware.com
# Claudia Richter <cwalenzyk@yahoo.com>, 2006.
#
msgid ""
msgstr ""
"Project-Id-Version: scripts_editor_extensions\n"
"POT-Creation-Date: 2020-05-13 12:03+EDT\n"
"PO-Revision-Date: 2016-12-14 16:17+0100\n"
"Last-Translator: Christoph Heitkamp <info@chrisheitkamp.de>\n"
"Language-Team: German\n"
"Language: de_DE\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"Generated-By: pygettext.py 1.5\n"
"X-Generator: Poedit 1.8.11\n"

#: scripts/editor-extensions.py:1
msgid ""
"Editor extensions that also serve as examples for scripting Wing.\n"
"\n"
"See the Scripting chapter of the manual for more information on writing \n"
"and using scripts.\n"
"\n"
"Copyright (c) 2005-2015, Wingware All rights reserved.\n"
"Copyright (c) 2005, Ken Kinder All rights reserved.\n"
"\n"
"Permission is hereby granted, free of charge, to any person obtaining\n"
"a copy of this software and associated documentation files (the\n"
"\"Software\"), to deal in the Software without restriction, including\n"
"without limitation the rights to use, copy, modify, merge, publish,\n"
"distribute, sublicense, and/or sell copies of the Software, and to\n"
"permit persons to whom the Software is furnished to do so, subject to\n"
"the following conditions:\n"
"\n"
"The above copyright notice and this permission notice shall be\n"
"included in all copies or substantial portions of the Software.\n"
"\n"
"THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n"
"EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n"
"MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n"
"IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n"
"CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n"
"TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n"
"SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n"
"\n"
"Notes:\n"
"\n"
"* sort_selected() was contributed by Ken Kinder\n"
"* Improved title_case() and auto-selection contributed by\n"
"  Yves Bastide\n"
"* Parts of toggle_case() thanks to Ram Rachum\n"
"\n"
msgstr ""
"Editor-Erweiterung, die außerdem als Beispiel für Skripting in Wing dient.\n"
"\n"
"Zusätzliche Informationen zum Schreiben und zur Verwendung von Skripten "
"finden Sie \n"
"im Kapitel \"Skripting\" des Benutzerhandbuchs.\n"
"\n"
"Copyright (c) 2005-2008, Wingware Alle Rechte vorbehalten.\n"
"Copyright (c) 2005, Ken Kinder Alle Rechte vorbehalten.\n"
"\n"
"Permission is hereby granted, free of charge, to any person obtaining\n"
"a copy of this software and associated documentation files (the\n"
"\"Software\"), to deal in the Software without restriction, including\n"
"without limitation the rights to use, copy, modify, merge, publish,\n"
"distribute, sublicense, and/or sell copies of the Software, and to\n"
"permit persons to whom the Software is furnished to do so, subject to\n"
"the following conditions:\n"
"\n"
"The above copyright notice and this permission notice shall be\n"
"included in all copies or substantial portions of the Software.\n"
"\n"
"THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n"
"EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n"
"MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n"
"IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n"
"CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n"
"TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n"
"SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n"
"\n"
"Hinweise:\n"
"\n"
"* sort_selected() wurde von Ken Kinder bereitgestellt.\n"
"* Improved title_case() und auto-selection wurden von Yves Bastide\n"
"  bereitgestellt.\n"
"\n"

#: scripts/editor-extensions.py:66
msgid ""
"Delete the line or range of lines that contain the current selection.\n"
"  This duplicates what the editor command delete-line does."
msgstr ""
"Zeile oder Zeilenbereich, die/der die aktuelle Auswahl enthält, löschen.\n"
"  Dies dupliziert, was der Editor-Befehl \"Zeile löschen\" ausführt."

#: scripts/editor-extensions.py:85
msgid ""
"Toggle block comment (with ## at start) on the selected lines in editor.\n"
"  This is a different style of block commenting than Wing implements by "
"default\n"
"  (the default in Wing is intended to work better with some of the other\n"
"  editor functionality)"
msgstr ""

#: scripts/editor-extensions.py:129
msgid ""
"Change between text-marking and non-text-marking mode.  Style is\n"
"  \"char\" for stream select, \"block\" for rectangular select, and \"line\" "
"for line select.\n"
"  Set select_right=1 to select the character to right of the cursor\n"
"  when marking is toggled on."
msgstr ""
"Wechselt zwischen den Modi Textmarkierung und keine Textmarkierung. Stil "
"ist\n"
"  \"char\" für die Auswahl von Zeichen, \"block\" für rechteckige Auswahl "
"und \"line\" für Zeilenauswahl.\n"
"  select_right=1 setzen, um das Zeichen rechts vom Cursor auszuwählen,\n"
"  wenn die Markierung umgeschalten ist."

#: scripts/editor-extensions.py:158
msgid ""
"Bring cursor to start of line, to start of visible area, or to \n"
"  start of document each successive consecutive invocation of this\n"
"  command."
msgstr ""
"Den Cursor zum Beginn der Zeile, zum Beginn des sichtbaren Bereichs oder "
"zum \n"
"  Beginn des Dokuments bringen, bei jedem aufeinander folgenden Aufruf "
"dieses\n"
"  Befehls."

#: scripts/editor-extensions.py:193
msgid ""
"Bring cursor to end of line, to end of visible area, or to \n"
"  end of document each successive consecutive invocation of this\n"
"  command."
msgstr ""
"Den Cursor zum Ende der Zeile, zum Ende des sichtbaren Bereichs oder zum \n"
"  Ende des Dokuments bringen, bei jedem aufeinander folgenden Aufruf dieses\n"
"  Befehls."

#: scripts/editor-extensions.py:309
#, fuzzy
msgid "Transform current selections or current word with the given callback "
msgstr "Aktuelle Auswahl oder Wort komplett in Kleinbuchstaben umwandeln"

#: scripts/editor-extensions.py:343
msgid "Change current selection or current word to all lower case"
msgstr "Aktuelle Auswahl oder Wort komplett in Kleinbuchstaben umwandeln"

#: scripts/editor-extensions.py:352
msgid "Change current selection or current word to all upper case"
msgstr "Aktuelle Auswahl  oder Wort komplett in Großbuchstaben umwandeln"

#: scripts/editor-extensions.py:362
msgid ""
"Change current selection or current word to capitalize first letter of each "
"word"
msgstr ""
"Aktuelle Auswahl oder Wort umwandeln, so dass jedes Wort mit einem "
"Großbuchstaben beginnt"

#: scripts/editor-extensions.py:365
msgid "A better version of string.capwords"
msgstr "Eine bessere Version von string.capwords"

#: scripts/editor-extensions.py:375
msgid ""
"Toggle current selection or current word between common name formats: "
"my_symbol_name,\n"
"  MySymbolName, and mySymbolName"
msgstr ""

#: scripts/editor-extensions.py:399
#, fuzzy
msgid ""
"Change hyphens (dashes) to underscores in current selection or current word"
msgstr ""
"Bindestriche (Gedankenstriche) in der aktuellen Auswahl zu Unterstrichen "
"umwandeln"

#: scripts/editor-extensions.py:409
#, fuzzy
msgid ""
"Change underscores to hyphens (dashes) in current selection or current word"
msgstr ""
"Unterstriche in der aktuellen Auswahl zu Bindestrichen (Gedankenstrichen) "
"umwandeln"

#: scripts/editor-extensions.py:419
msgid ""
"Surround selected text with (), [], {}, \"\", '', <>, or \\`\\`.  Arg char\n"
"  should be the opening character.  If there is no selection, the current\n"
"  word is surrounded."
msgstr ""

#: scripts/editor-extensions.py:439
msgid "Sort selected lines of text alphabetically"
msgstr "Die ausgewählten Textzeilen alphabetisch sortieren"

#: scripts/editor-extensions.py:470
msgid "Copy the filename for the currently selected file to the clipboard"
msgstr ""

#: scripts/editor-extensions.py:476
msgid "Paste from clipboard after removing any >>> and ... prompts"
msgstr ""

#: scripts/editor-extensions.py:505
msgid "Modified tab indentation command that acts like tab in Visual Studio."
msgstr ""
"Modifizierter Befehl für die Tab-Einrückung, der wie Tab in Visual Studio "
"funktioniert."

#: scripts/editor-extensions.py:554
msgid "Convert the current editor to use CR + LF style line endings"
msgstr "Aktuellen Editor umwandeln, so dass er CR + LF Zeilenenden verwendet"

#: scripts/editor-extensions.py:561
msgid "Convert the current editor to use CR style line endings"
msgstr "Aktuellen Editor umwandeln, so dass er CR-artige Zeilenenden verwendet"

#: scripts/editor-extensions.py:568
msgid "Convert the current editor to use LF style line endings"
msgstr "Aktuellen Editor umwandeln, so dass er LF-artige Zeilenenden verwendet"

#: scripts/editor-extensions.py:578
msgid ""
"Fold up all Python methods, expand all classes, and leave other fold\n"
"  points alone"
msgstr ""
"Alle Python-Methoden falten, alle Klassen erweitern und andere Faltepunkte\n"
"  unverändert lassen"

#: scripts/editor-extensions.py:618
msgid "Fold up all Python classes but leave other fold points alone"
msgstr "Alle Python-Klassen falten, aber andere Faltepunkte unverändert lassen"

#: scripts/editor-extensions.py:635
msgid ""
"Fold up all Python classes, methods, and functions but leave other fold\n"
"  points alone"
msgstr ""
"Alle Python-Klassen, -Methoden und -Funktionen falten, aber andere\n"
"  Faltepunkte unverändert lassen"

#: scripts/editor-extensions.py:653
msgid "Approximation of zr key binding in vim"
msgstr ""

#: scripts/editor-extensions.py:667
msgid "Approximation of zm key binding in vim"
msgstr ""

#: scripts/editor-extensions.py:720
msgid ""
"Insert a print statement to print a selected variable name and\n"
"  value, along with the file and line number."
msgstr ""

#: scripts/editor-extensions.py:751
msgid ""
"Do a search on the Python documentation for the selected text\n"
"  in the current editor"
msgstr ""

#: scripts/editor-extensions.py:766
msgid "Add a debug watch for the selected text in the current editor"
msgstr ""

#: scripts/editor-extensions.py:780
msgid ""
"Check the current file out of clearcase.  This is best used with Wing\n"
"  configured to auto-reload unchanged files."
msgstr ""
"Aktuelle Datei aus clearcase auschecken. Es ist am besten, wenn Wing dabei\n"
"  so konfiguriert ist, dass es ungeänderte Dateien automatisch neu lädt."

#: scripts/editor-extensions.py:793
msgid ""
"If editor is split, unsplit it and show the vertical tools panel.\n"
"    Otherwise, hide the vertical tools and split the editor left-right\n"
"    Assumes default windowing policy (combined toolbox & editor windows).\n"
"    Thanks to Jonathan March for this script."
msgstr ""

#: scripts/editor-extensions.py:807
msgid ""
"Toggle between moving the toolboxes to a separate window and\n"
"    the default single-window mode"
msgstr ""

#: scripts/editor-extensions.py:817
msgid ""
"Insert spaces to reach the next tab stop (units of given tab size\n"
"  or editor's tab size if none is given)"
msgstr ""

# HTK: Caret
#: scripts/editor-extensions.py:842
msgid ""
"Insert given text at current caret location, replacing any existing \n"
"  selected text"
msgstr ""

#: scripts/editor-extensions.py:853
msgid ""
"Enter a newline, indent to match previous line and insert a comment\n"
"  character and a space.  Assumes that auto-indent is enabled."
msgstr ""

#: scripts/editor-extensions.py:917
msgid "Provide simple word-list driven auto-completion on the current editor"
msgstr ""

#: scripts/editor-extensions.py:946
msgid "Word"
msgstr "Wort"

#: scripts/editor-extensions.py:948
msgid "Word:"
msgstr "Wort:"

#: scripts/editor-extensions.py:960
msgid ""
" Display the commands that a key is bound to in the status area.  Does\n"
"  not fully work for the vi binding. "
msgstr ""

#: scripts/editor-extensions.py:967 scripts/editor-extensions.py:994
msgid " is not bound"
msgstr ""

#: scripts/editor-extensions.py:992
msgid " is bound to "
msgstr ""

#: scripts/editor-extensions.py:999
msgid "Key"
msgstr "Taste"

#: scripts/editor-extensions.py:1001
msgid "Press Key(s) then Enter"
msgstr "Taste(n) drücken, dann Enter"

#: scripts/editor-extensions.py:1006
msgid ""
" Variant of emacs style kill-line command that always kills the eol \n"
"  characters "
msgstr ""

#: scripts/editor-extensions.py:1025
msgid ""
"Copy 'filename, lineno (scope)' optionally followed by the current line\n"
"  or selected lines to the clipboard.  The scope is omitted if there isn't\n"
"  one or in a non-Python file."
msgstr ""

#: scripts/editor-extensions.py:1063
msgid ""
"Implement a variant of clipboard copy that copies the whole\n"
"  current line if there is no selection on the editor."
msgstr ""

#: scripts/editor-extensions.py:1092
msgid ""
"Implement a variant of clipboard cut that cuts the whole\n"
"  current line if there is no selection on the editor."
msgstr ""

#: scripts/editor-extensions.py:1131
msgid ""
" A variant of paste that inserts line just copied with smart-copy above\n"
"  current line. "
msgstr ""

#: scripts/editor-extensions.py:1189
msgid "Open the url at caret in the current editor"
msgstr ""

#: scripts/editor-extensions.py:1198
msgid "Open the url being clicked in the current editor"
msgstr ""

#: scripts/editor-extensions.py:1210
msgid "Open the filename at the caret in current editor"
msgstr ""

#: scripts/editor-extensions.py:1219
msgid "Open the filename being clicked in the current editor"
msgstr ""

#: scripts/editor-extensions.py:1231
msgid "Initial batch search for the current editor's directory"
msgstr ""

#: scripts/editor-extensions.py:1243
msgid " Close all readonly files "
msgstr ""

#: scripts/editor-extensions.py:1273
msgid ""
" Set the current file's executable bit in its permissions.  If set_bit\n"
"  is true (the default), the executable bit is set; if set_bit is false,\n"
"  the executable bit is cleared.  This doesn't do anything on windows. "
msgstr ""
