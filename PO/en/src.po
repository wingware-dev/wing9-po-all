# Module src translation file for language=en
# Copyright (C) 2003 Archaeopteryx Software, Inc.
# Wing Python IDE -- wingware.com
#
msgid ""
msgstr ""
"Project-Id-Version: 2.0.0\n"
"POT-Creation-Date: 2022-12-14 09:51-0500\n"
"PO-Revision-Date: 2003-07-10 12:22GMT\n"
"Last-Translator: \n"
"Language-Team:  <C@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: pygettext.py 1.4\n"
"X-Generator: KBabel 0.9.5\n"

#: src/capabilities.py:102
msgid "Advanced indentation analysis and translation"
msgstr ""

#: src/capabilities.py:103
msgid "Folding in the source code editor"
msgstr ""

#: src/capabilities.py:104
msgid "Recent menus"
msgstr ""

#: src/capabilities.py:105
msgid "Attach/detach to debug processes"
msgstr ""

#: src/capabilities.py:106
msgid "Expression and value watching for debugger"
msgstr ""

#: src/capabilities.py:107
msgid "Interactive debug probe tool"
msgstr ""

#: src/capabilities.py:108
msgid "Debug externally launched processes"
msgstr ""

#: src/capabilities.py:109
msgid "Advance exception handling modes"
msgstr ""

#: src/capabilities.py:110
msgid "Module-oriented debug data view"
msgstr ""

#: src/capabilities.py:111
msgid "Shared projects for use in revision control"
msgstr ""

#: src/capabilities.py:112
msgid "Advanced breakpoints for debugger"
msgstr ""

#: src/capabilities.py:113
msgid "Debug data value tooltips"
msgstr ""

#: src/capabilities.py:114
msgid "Debugger breakpoint manager"
msgstr ""

#: src/capabilities.py:115
msgid "Source code browser"
msgstr ""

#: src/capabilities.py:116
msgid "Source assistant"
msgstr ""

#: src/capabilities.py:117
msgid "Scripting support"
msgstr ""

#: src/capabilities.py:118
msgid "Keyboard and command macro support"
msgstr ""

#: src/capabilities.py:119
msgid "User-defined named bookmarks"
msgstr ""

#: src/capabilities.py:120
msgid "Autocompletion"
msgstr ""

#: src/capabilities.py:121
msgid "Projects"
msgstr ""

#: src/capabilities.py:122
msgid "Wildcard and regular expression search"
msgstr ""

#: src/capabilities.py:123
msgid "Batch search"
msgstr ""

#: src/capabilities.py:124
msgid "Disk search"
msgstr ""

#: src/capabilities.py:125
msgid "Multi-window GUI support"
msgstr ""

#: src/capabilities.py:126
msgid "Messages view"
msgstr ""

#: src/capabilities.py:127
msgid "Unit testing tool"
msgstr ""

#: src/capabilities.py:128
msgid "Support for running external processes in a console"
msgstr ""

#: src/capabilities.py:129
msgid "Code snippets"
msgstr ""

#: src/capabilities.py:130
msgid "Version control"
msgstr ""

#: src/capabilities.py:131
msgid "Perspectives"
msgstr ""

#: src/capabilities.py:132
msgid "Difference and merge tool"
msgstr ""

#: src/capabilities.py:133
msgid "Code warnings"
msgstr ""

#: src/capabilities.py:134
msgid "Auto-editing"
msgstr ""

#: src/capabilities.py:135
msgid "Named file sets"
msgstr ""

#: src/capabilities.py:136
msgid "Launch Configurations"
msgstr ""

#: src/capabilities.py:137
msgid "IPython"
msgstr ""

#: src/capabilities.py:138
msgid "Multi-process debugging"
msgstr ""

#: src/capabilities.py:139
msgid "Find Symbol in Project"
msgstr ""

#: src/capabilities.py:141
msgid "Debug code executed in shells"
msgstr ""

#: src/capabilities.py:142
msgid "Automated remote debugging"
msgstr ""

#: src/capabilities.py:143
msgid "Multiple selections"
msgstr ""

#: src/capabilities.py:144
msgid "Containers"
msgstr ""

#: src/capabilities.py:145
msgid "Package manager"
msgstr ""

#: src/capabilities.py:146
msgid "Generic support specific to Wing 101"
msgstr ""

#: src/capabilities.py:147
msgid "Generic support specific to Wing Personal"
msgstr ""

#: src/capabilities.py:148
msgid "Generic support specific to Wing Pro"
msgstr ""

#: src/config.py:170
msgid ""
"Wing was written at Wingware, maker of Python IDEs since 1998.  This product "
"contains the following third party modules:\n"
"      \n"
"  * UI translations by Jean Sanchez and Laurent Fasnacht (French), Christoph "
"Heitkamp\n"
"    (German), and Alexandr Dragunkin (Russian)\n"
"\n"
"  * Python written by Guido van Rossum and many contributors.\n"
"\n"
"  * Qt6 cross-platform GUI toolkit, developed by many contributors.\n"
"  \n"
"  * PyQt6 Python bindings, by Riverbank Computing Limited.\n"
"  \n"
"  * Python Imaging Library, developed by Secret Labs AB and Fredrik Lundh.\n"
"  \n"
"  * Scintilla, a source code editor widget, written by Neil Hodgson and many "
"contributors.\n"
"  \n"
"  * Docutils, tools for ReST document conversion, written by David Goodger "
"and contributors.\n"
"  \n"
"  * Sqlite, an embedded sql database engine, written by D. Richard Hipp, Dan "
"Kennedy, Shane Harrelson, Christian Werner, and contributors.\n"
"  \n"
"  * Pysqlite, Python bindings for sqlite, written by Gerhard Häring.\n"
"  \n"
"  * pexpect by Noah Spurrier, Richard Holden, Marco Molteni, Kimberley "
"Burchett, Robert Stone, Hartmut Goebel, Chad Schroeder, Erick Tryzelaar, "
"Dave Kirby, Ids vander Molen, George Todd, Noel Taylor, Nicolas D. Cesar, "
"Alexander Gattin, Jacques-Etienne Baudoux, Geoffrey Marshall, Francisco "
"Lourenco, Glen Mabey, Karthik Gurusamy, Fernando Perez, Corey Minyard, Jon "
"Cohen, Guillaume Chazarain, Andrew Ryan, Nick Craig-Wood, Andrew Stone, "
"Jorgen Grahn, John Spiegel, Jan Grant, and Shane Kerr.\n"
"\n"
"  * ptyprocess by Noah Spurrier.\n"
"  \n"
"  * PyYAML by Ingy döt Net and Kirill Simonov.\n"
"  \n"
"  * pycodestyle by Johann C. Rocholl, Florent Xicluna, and Ian Lee.\n"
"  \n"
"  * autopep8 by Hideo Hattori, Steven Myint, Bill Wendling, and "
"contributors.\n"
"  \n"
"  * Pygments by Georg Brandl, Armin Ronacher, Tim Hatch, and contributors.\n"
"  \n"
"  * getmac by Christopher Goes and contributors.\n"
"  \n"
"  * Positronic, Cherry Blossom, and Sun Steel color palettes by Daniel "
"Hill.\n"
"  \n"
"  * pipdeptree by Vineet Naik and contributors.\n"
"  \n"
"  * Fabric by Jeff Forcier and contributors.\n"
"  \n"
"  * Paramiko by Jeff Forcierk Alex Gaynor, Olle Lundberg, Scott Maxwell, and "
"other contributors\n"
"  \n"
"  * bcrypt by Paul Kehrer, Alex Gaynor, Donald Stufft, John Durfresne, and "
"many other contributors\n"
"    \n"
"  * cffi by Armin Rigo and Maciej Fijalkowsk\n"
"  \n"
"  * cryptography by Paul Kehrer, Alex Gaynor, Alex Stapleton, Terry Chia, "
"dreid, Mohamed Atti, and many other contributors\n"
"    \n"
"  * invoke by Jeff Forcier and contributors\n"
"  \n"
"  * pathlib2 by Matthias C. M. Troffaes, Antoine Pitrou, and contributors\n"
"    \n"
"  * pycparser by Eli Bendersky, Jon Dufresne, Akira Hayakawa, and "
"contributors\n"
"    \n"
"  * pynacl by Donald Stufft, Paul Kehrer, lmctv, Alex Gaynor, David "
"Robertson, Terry Chia, Jack Wink, and other contributors\n"
"    \n"
"  * six by Benjamin Peterson, Marc Abramowitz, Jason R. Coombs, Jon "
"Dufresne, and many contributors\n"
"\n"
"We gratefully acknowledge the efforts of all that have contributed to these "
"and the other open source products and tools that are used in the "
"development of Wing.\n"
"\n"
"  "
msgstr ""

#: src/main.py:70
msgid "Wing %s version is %s.%s"
msgstr ""

#: src/main.py:71
msgid "kWingHome="
msgstr ""

#: src/main.py:72
msgid "UserSettings="
msgstr ""

#: src/main.py:73
msgid "kCacheDir="
msgstr ""

#: src/main.py:77
msgid "Cannot run without WINGHOME: exiting"
msgstr ""

#: src/main.py:88
msgid "_Exit"
msgstr ""

#: src/main.py:94
msgid "Could not create or access user settings directory "
msgstr ""

#: src/main.py:124
msgid "Creating singletons..."
msgstr ""

#: src/main.py:156
msgid ""
"Wing could not start up.  Please submit this bug report to us, with as much "
"additional information as possible about what caused the problem.\n"
"\n"
"Sorry for this inconvenience -- submitting a report will help us to fix the "
"problem sooner."
msgstr ""

#: src/main.py:198
msgid "Exiting normally"
msgstr ""

#: src/main.py:318
msgid "_Use dotfile locking"
msgstr ""

#: src/main.py:319
msgid "_Don't use dotfile locking"
msgstr ""

#: src/main.py:320
msgid "Wing may not have started correctly"
msgstr ""

#: src/main.py:321
msgid ""
"Wing may have hung when trying to open a database file in your ~/.cache "
"directory the last time it was run.  This may be caused by a file locking "
"failure with a remote file server.  To work around the file locking failure, "
"use the slower dotfile locking."
msgstr ""

#: src/mainprefs.py:34
msgid "System Default"
msgstr ""

#: src/mainprefs.py:45
msgid ""
"The language to use for the user interface.  Either the default for this "
"system, or set to a specific supported language."
msgstr ""

#: src/mainprefs.py:54
msgid ""
"Controls whether most recent project is reopened at startup, in the absence "
"of any other project on the command line."
msgstr ""

#: src/mainprefs.py:67
msgid ""
"This is a map from file extension or wildcard to mime type.  It adds "
"additional file type mappings to those built into Wing.  File extensions can "
"be specified alone without dot or wildcard, for example \"xcf\" or using "
"wildcards containing \"*\" and/or \"?\", for example \"Makefile*\". The mime "
"type to use for Python files is \"text/x-python\"."
msgstr ""

#: src/mainprefs.py:73
msgid "File Extension"
msgstr ""

#: src/mainprefs.py:73 src/mainprefs.py:82 src/mainprefs.py:91
msgid "Mime Type"
msgstr ""

#: src/mainprefs.py:79
msgid ""
"This is a map from mime type to displayable name for that mime type; one "
"entry should be added for each new mime type added with the main.extra-mime-"
"types preference."
msgstr ""

#: src/mainprefs.py:82 src/mainprefs.py:481
msgid "Name"
msgstr ""

#: src/mainprefs.py:88
msgid ""
"This is a map from mime type to tuple of start/end comment characters for "
"each mime type.  One entry should be added for each new mime type added with "
"the main.extra-mime-types preference."
msgstr ""

#: src/mainprefs.py:91
msgid "Comment Characters"
msgstr ""

#: src/mainprefs.py:92
msgid "End"
msgstr ""

#: src/mainprefs.py:92
msgid "Start"
msgstr ""

#: src/mainprefs.py:97
msgid "System default (%s)"
msgstr ""

#: src/mainprefs.py:99
msgid ""
"The default encoding to use for text files opened in the source editor and "
"other tools, when an encoding for that file cannot be determined by reading "
"the file.  Other encodings may also be tried.  This also sets the encoding "
"to use for newly created files."
msgstr ""

#: src/mainprefs.py:109
msgid ""
"The number of bytes at which the IDE log file (%s) is truncated.  This file "
"can be sent to technical support to help diagnose problems with the IDE."
msgstr ""

#: src/mainprefs.py:117
msgid "Auto Reload"
msgstr ""

#: src/mainprefs.py:118 src/mainprefs.py:125
msgid "Immediately Request Reload"
msgstr ""

#: src/mainprefs.py:119 src/mainprefs.py:126
msgid "Request Reload on Edit"
msgstr ""

#: src/mainprefs.py:120 src/mainprefs.py:127
msgid "Never Reload"
msgstr ""

#: src/mainprefs.py:138
msgid ""
"Selects action to perform on files found to be externally changed but "
"unaltered within the IDE.  Use Auto Reload to automatically reload these "
"files, Immediately Request Reload to ask via a dialog box upon detection, "
"Request Reload on Edit to ask only if the unchanged file is edited within "
"the IDE subsequently, or Never Reload to ignore external changes (although "
"you will still be warned if you try to save over an externally changed file)"
msgstr ""

#: src/mainprefs.py:147
msgid ""
"Selects action to perform on files found to be externally changed and that "
"also have been altered in the IDE.  One of Immediately Request Reload to ask "
"via a dialog box upon detection, Request Reload on Edit to ask if the file "
"is edited further, or Never Reload to ignore external changes (although you "
"will always be warned if you try to save over an externally changed file)"
msgstr ""

#: src/mainprefs.py:155
msgid ""
"Time in seconds indicating the frequency with which the IDE should check the "
"disk for files that have changed externally. Set to 0 to disable entirely."
msgstr ""

#: src/mainprefs.py:161
msgid ""
"Don't reload files if size has not changed and a hash of the contents "
"matches the hash when it was last read. This check is skipped if file is "
"larger than 5 MB."
msgstr ""

#: src/mainprefs.py:167
msgid "Closes Editor"
msgstr ""

#: src/mainprefs.py:168
msgid "Shows Blank Editor"
msgstr ""

#: src/mainprefs.py:169
msgid "Prompts for Action"
msgstr ""

#: src/mainprefs.py:178
msgid ""
"Specifies the behavior of reload when a file that is open in an editor "
"disappears on disk.  The default Closes Editor is recommended if using "
"revision control.  Otherwise, retaining the current editor content reduces "
"the chances of entirely losing a file if it is accidentally deleted on disk."
msgstr ""

#: src/mainprefs.py:188
msgid ""
"Specifies the directories in which Wing will look for user-defined scripts "
"that extend the functionality of the IDE itself.  The directory names may "
"contain environment variables in the $(envname) form.  Use $(WING:"
"PROJECT_DIR) for the project directory.For each directory, Wing will load "
"all found Python modules and packages, treating any function whose name "
"starts with a letter (not _ or __) as a script-provided command.  Extension "
"scripts found in files within directories later in the list will override "
"scripts of the same name found earlier, except that scripts can never "
"override commands that are defined internally in Wing itself (these are "
"documented in the Command Reference in the users manual). See the Scripting "
"and Extending chapter of the manual for more information on writing and "
"using extension scripts."
msgstr ""

#: src/mainprefs.py:205
msgid ""
"When enabled, Wing will automatically reload scripts that extend the IDE "
"when they are edited and saved from the IDE.  This makes developing "
"extension scripts for the IDE very fast, and should work in most cases.  "
"Disable this when working on extension scripts that do not reload properly, "
"such as those that reach through the scripting API extensively."
msgstr ""

#: src/mainprefs.py:218
msgid ""
"Automatically check for updates at startup by connecting to wingware.com. "
"Updates are checked every three days, or more often for prerelease versions."
msgstr ""

#: src/mainprefs.py:228
msgid ""
"Show a reminder when Support+Upgrades for the active license is expired or "
"will expire soon."
msgstr ""

#: src/mainprefs.py:233
msgid ""
"Used internally to keep track of latest version the user is not interested in"
msgstr ""

#: src/mainprefs.py:242
msgid ""
"Allow submitting a log of which features you use to Wingware.  This is done "
"periodically at startup and also when you submit bug reports, feedback, or "
"check for updates.  The data provided is held confidential, used only for "
"technical support and planning future development, and can be seen in the "
"file %s"
msgstr ""

#: src/mainprefs.py:249
msgid "Base on the Current File or Selection"
msgstr ""

#: src/mainprefs.py:250
msgid "Use Project's Home Directory"
msgstr ""

#: src/mainprefs.py:251
msgid "Use Last Open/Save Directory"
msgstr ""

#: src/mainprefs.py:252
msgid "Use Startup or Current Directory"
msgstr ""

#: src/mainprefs.py:253
msgid "Use Fixed Directory Specified Below"
msgstr ""

#: src/mainprefs.py:258
msgid ""
"Defines how Wing determines the starting directory to use when prompting for "
"a file name:  Either based on location of the resource at current focus, "
"location of the current project home directory, the last directory visited "
"for file selection, the current directory at startup (or selected since), or "
"always the specific fixed directory entered here."
msgstr ""

#: src/mainprefs.py:305
msgid "Python Files"
msgstr ""

#: src/mainprefs.py:306
msgid "Hidden & Temporary Files"
msgstr ""

#: src/mainprefs.py:307
msgid "All Source Files"
msgstr ""

#: src/mainprefs.py:308
msgid "C/C++ Files"
msgstr ""

#: src/mainprefs.py:309
msgid "HTML and XML Files"
msgstr ""

#: src/mainprefs.py:431 src/mainprefs.py:432
msgid "Spec"
msgstr ""

#: src/mainprefs.py:431 src/mainprefs.py:432
msgid "Type"
msgstr ""

#: src/mainprefs.py:437
msgid "Exclude"
msgstr ""

#: src/mainprefs.py:437
msgid "Include"
msgstr ""

#: src/mainprefs.py:443
msgid ""
"Defines file filters to apply to file names for inclusion and exclusion from "
"a larger set (such as scanned disk files or all project files).\n"
"\n"
"Each filter is named and contains one list of inclusion patterns and one "
"list of exclusion patterns.  The patterns can be a wildcard on the file "
"name, wildcard on a directory name, or a mime type name.\n"
"\n"
" Only a single pattern needs to be matched for inclusion or exclusion.  "
"Exclusion patterns take precedence over inclusion patterns, so any match on "
"an exclusion pattern will always exclude a file from the selected set.  "
"Filters are used in constraining search, adding project files, and for other "
"operations on collections of files."
msgstr ""

#: src/mainprefs.py:481
msgid "Specification"
msgstr ""

#: src/mainprefs.py:487
msgid ""
"If True and a gtk, gdk, or glib critical message is logged, Wing tries to "
"start a C debugger and break at the current execution point"
msgstr ""

#: src/mainprefs.py:495
msgid "Controls whether or not the splash screen is shown at startup."
msgstr ""

#: src/mainprefs.py:501
msgid "Reuse Existing Instance to Open Files"
msgstr ""

#: src/mainprefs.py:502
msgid "Always Reuse Existing Instance"
msgstr ""

#: src/mainprefs.py:503
msgid "Always Launch New Instance"
msgstr ""

#: src/mainprefs.py:508
msgid ""
"Controls whether Wing tries to reuse an existing running instance of the IDE "
"when it is launched again."
msgstr ""

#: src/mainprefs.py:521
msgid ""
"When enabled, Wing will show a dialog offerring to update any remote agent "
"that does not match Wing's version."
msgstr ""

#: src/mainprefs.py:530
msgid ""
"When searching on the PATH, Wing will look for OpenSSH's ssh.  If it cannot "
"be found, the built-in SSH implementation is used instead."
msgstr ""

#: src/mainprefs.py:534
msgid ""
"When searching the PATH, Wing will look first for PuTTY's plink.exe and then "
"for ssh.exe.  If neither is found, the built-in SSH implementation is used "
"instead."
msgstr ""

#: src/mainprefs.py:540
msgid ""
"The SSH implementation to use for remote development.  This is used to "
"launch Wing's remote agent and to establish secure SSH tunnels for debugging "
"on remote systems."
msgstr ""

#: src/mainprefs.py:543
msgid "Find %s on PATH"
msgstr ""

#: src/mainprefs.py:544
msgid "Built In"
msgstr ""

#: src/mainprefs.py:545
msgid "Use executable:"
msgstr ""

#: src/mainprefs.py:551
msgid ""
"Controls whether to allow access to an SSH user agent like OpenSSH's ssh-"
"agent or PuTTY's pageant."
msgstr ""

#: src/mainprefs.py:559
msgid ""
"The maximum time in seconds to wait for SSH connections to be established."
msgstr ""

#: src/mainprefs.py:567
msgid ""
"The maximum time in seconds to wait if a connection to a remote host is not "
"responding.  Afterwards the connection is closed and retried."
msgstr ""

#: src/mainprefs.py:576
msgid ""
"Controls whether to show a warning before editing a remote host "
"configuration that is currently in use."
msgstr ""

#: src/mainprefs.py:584
msgid ""
"Controls whether remote agent activity is directed into the IDE log instead "
"of being written on the remote host.  This will slow down the remote agent "
"and should only be enabled at the requestof Wingware Technical Support."
msgstr ""

#: src/mainprefs.py:595
msgid ""
"Controls whether to show a warning before editing a container configuration "
"or stopping a container that is currently in use."
msgstr ""

#: src/mainprefs.py:603
msgid ""
"Controls whether to show a notice after a change in Project Properties "
"results in a change to the effective container configuration."
msgstr ""

#: src/mainprefs.py:610
msgid ""
"Controls whether to show a warning when a project that uses a container or "
"cluster specifies a non-default environment."
msgstr ""

#: src/mainprefs.py:617
msgid "Automatically Restart Instances"
msgstr ""

#: src/mainprefs.py:618
msgid "Leave Instances Running"
msgstr ""

#: src/mainprefs.py:619 src/mainprefs.py:651
msgid "Prompt for Action"
msgstr ""

#: src/mainprefs.py:624
msgid ""
"Controls what action to take if the container image for a running container "
"instance is rebuilt or changes.  Auto-restarting instances will terminate "
"all debug, test, OS Command, Python Shell processes on the container without "
"confirmation."
msgstr ""

#: src/mainprefs.py:634
msgid ""
"Controls whether to show a warning before editing a cluster configuration or "
"stopping a cluster that is currently in use."
msgstr ""

#: src/mainprefs.py:642
msgid ""
"Controls whether to show a notice when a cluster configuration is changed, "
"causing the cluster to be terminated and restarted."
msgstr ""

#: src/mainprefs.py:649
msgid "Automatically Restart Cluster"
msgstr ""

#: src/mainprefs.py:650
msgid "Leave Cluster Running"
msgstr ""

#: src/mainprefs.py:656
msgid ""
"Controls what action to take if container images used in a running cluster "
"are rebuilt or change.  Auto-restarting the cluster will terminate without "
"confirmation all in-cluster debug, unit test, OS Command, Python Shell "
"processes."
msgstr ""

#: src/mainprefs.py:666
msgid ""
"Allows manual configuration of an http proxy to be used for feedback, bug "
"reports, and license activation, all of which result in Wing connecting to "
"wingware.com via http.  Leave user name and password blank if not required."
msgstr ""

#: src/mainprefs.py:670
msgid "No proxy server (or auto-detected)"
msgstr ""

#: src/mainprefs.py:671
msgid "Configure proxy server manually:"
msgstr ""

#: src/mainprefs.py:672
msgid "Host name"
msgstr ""

#: src/mainprefs.py:672
msgid "Port"
msgstr ""

#: src/mainprefs.py:672
msgid "User name"
msgstr ""

#: src/mainprefs.py:673
msgid "Password"
msgstr ""

#: src/mainprefs.py:679
msgid ""
"Whether to use secure https (port 443) when accessing wingware.com for "
"license activation, update checks, and submitting feedback or bug reports.  "
"When disabled, http (port 80) is used instead."
msgstr ""

#: src/mainprefs.py:686 src/mainprefs.py:721
msgid "Never"
msgstr ""

#: src/mainprefs.py:687
msgid "When saving files"
msgstr ""

#: src/mainprefs.py:688
msgid "When saving files in project"
msgstr ""

#: src/mainprefs.py:692
msgid ""
"Controls whether to automatically strip trailing white space in the editor.  "
"May be enabled for any file or only files that are part of the current "
"project."
msgstr ""

#: src/mainprefs.py:703
msgid "Tools and Layout"
msgstr ""

#: src/mainprefs.py:704
msgid "Tools, Layout, and Editors"
msgstr ""

#: src/mainprefs.py:705
msgid "All Visual State"
msgstr ""

#: src/mainprefs.py:709
msgid ""
"Selects the file to use for storing and retrieving shared perspectives. By "
"default (when value is None) the file 'perspectives' in the user settings "
"directory is used."
msgstr ""

#: src/mainprefs.py:714 src/mainprefs.py:740
msgid "Default"
msgstr ""

#: src/mainprefs.py:715 src/mainprefs.py:741
msgid "File:"
msgstr ""

#: src/mainprefs.py:720
msgid "Always"
msgstr ""

#: src/mainprefs.py:722
msgid "Prompt"
msgstr ""

#: src/mainprefs.py:723
msgid "Configured by Perspective"
msgstr ""

#: src/mainprefs.py:726
msgid ""
"Selects whether to auto-save perspectives when switching to another "
"perspective. Can always auto-save, never auto-save, prompt each time a "
"perspective is left, or auto-save as configured on a per-perspective basis."
msgstr ""

#: src/mainprefs.py:735
msgid ""
"Selects the file to use for storing and retrieving shared named files sets. "
"By default (when value is None) the file 'filesets' in the user settings "
"directory is used."
msgstr ""

#: src/mainprefs.py:746
msgid "Defines which plugins are enabled or disabled."
msgstr ""

#: src/mainprefs.py:753
msgid ""
"The amount by which to zoom font sizes in or out in the documentation viewer."
msgstr ""

#: src/mainprefs.py:758
msgid ""
"Whether to try parsing docstrings as ReST format for display in the Source "
"Assistant.  This may destroy formatting of some docstrings."
msgstr ""

#: src/mainprefs.py:765
msgid "Debug"
msgstr ""

#: src/mainprefs.py:766
msgid "Informational"
msgstr ""

#: src/mainprefs.py:767
msgid "Warning"
msgstr ""

#: src/mainprefs.py:768
msgid "Error"
msgstr ""

#: src/mainprefs.py:769
msgid "Severe"
msgstr ""

#: src/mainprefs.py:772
msgid ""
"The error level at or above which the source assistant will display parse "
"errors in PEP287 docstrings (if showing PEP287 errors) or will fall back to "
"showing plain text (if not showing PEP287 errors).  For errors below this "
"threshold, a best attempt is made to achieve a reasonable rendering."
msgstr ""

#: src/mainprefs.py:780
msgid ""
"Whether to render docstrings even if they contain parse errors at or above "
"the threshold set by Source Assistant PEP 287 Error Threshold.  When "
"disabled, failing docstrings are shown as plain text instead.  When enabled, "
"a best effort is made to display the formatted docstring while suppressing "
"errors."
msgstr ""

#: src/mainprefs.py:788
msgid ""
"Whether to rewrap plain text docstrings for display in the Source "
"Assistant.  This may destroy formatting of some docstrings."
msgstr ""

#: src/mainprefs.py:794
msgid ""
"Whether to always show docstrings in the Source Assistant.  When disabled, "
"only the docstring for the last displayed symbol is shown."
msgstr ""

#: src/mainprefs.py:800
msgid "Whether show docstring type and validity in the Source Assistant."
msgstr ""

#: src/mainprefs.py:806
msgid "Controls whether Wing will periodically show discount offers."
msgstr ""

#: src/mainprefs.py:812
msgid "History of updates used diagnostically"
msgstr ""

#: src/mainprefs.py:817
msgid "Used internally to select the most recently used prefs page."
msgstr ""

#: src/mainprefs.py:822
msgid ""
"Used internally to select the most recently used properties dialog pages."
msgstr ""

#: src/mainprefs.py:828
msgid ""
"Controls whether Wing runs in presentation mode, which magnifies the user "
"interface.  Wing must be restarted before this value takes effect."
msgstr ""

#: src/mainprefs.py:835
msgid ""
"The amount by which to increase UI size when presentation mode is enabled.  "
"Wing must be restarted before this value takes effect."
msgstr ""

#: src/mainprefs.py:841
msgid ""
"Scale factor for icons, windows, and other graphical elements other than "
"fonts.  Can either be a single number or a ; (semicolon) separated list of "
"per-screen scale factors in the format used by the QT_SCREEN_SCALE_FACTORS "
"environment variable.  This has no effect if the QT_SCREEN_SCALE_FACTORS "
"environment variable is set before Wing is started Wing must be restarted "
"before this value takes effect."
msgstr ""

#: src/mainprefs.py:851
msgid "Automatically set scale factor based on screen dpi."
msgstr ""

#: src/mainprefs.py:856
msgid ""
"Whether to suggest per-screen scale factors at startup, based on inspection "
"of font size on each attached display."
msgstr ""

#: src/premain.py:316
msgid "alpha"
msgstr ""

#: src/premain.py:318
msgid "beta"
msgstr ""

#: src/premain.py:320
msgid "release candidate"
msgstr ""

#: src/premain.py:325
msgid "Starting version %s.%s%s"
msgstr ""

#: src/premain.py:634
msgid "Top-level Commands"
msgstr ""

#: src/premain.py:636
msgid "Project Manager Commands"
msgstr ""

#: src/premain.py:638
msgid "Editor Commands"
msgstr ""

#: src/premain.py:640
msgid "Search Manager Commands"
msgstr ""

#: src/premain.py:642
msgid "Unit Testing Commands"
msgstr ""

#: src/premain.py:645
msgid "Version Control Commands"
msgstr ""

#: src/premain.py:648
msgid "Debugger Commands"
msgstr ""

#: src/premain.py:650
msgid "Refactoring Commands"
msgstr ""

#: src/premain.py:653
msgid "Source Browser Commands"
msgstr ""

#: src/premain.py:656
msgid "Script-provided Add-on Commands"
msgstr ""

#: src/premain.py:692 src/premain.py:796
msgid "macOS"
msgstr ""

#: src/premain.py:799
msgid "XCode"
msgstr ""

#: src/premain.py:907
msgid "Preferences Dialog Path"
msgstr ""

#: src/premain.py:909
msgid "Internal Name"
msgstr ""

#: src/premain.py:910
msgid "Data Specification"
msgstr ""

#: src/premain.py:914
msgid "Default Value"
msgstr ""

#: src/premain.py:940
msgid "Core Preferences"
msgstr ""

#: src/premain.py:941
msgid "User Interface Preferences"
msgstr ""

#: src/premain.py:942
msgid "Editor Preferences"
msgstr ""

#: src/premain.py:946
msgid "Diff/Merge Preferences"
msgstr ""

#: src/premain.py:949
msgid "Project Manager Preferences"
msgstr ""

#: src/premain.py:950
msgid "Debugger Preferences"
msgstr ""

#: src/premain.py:951
msgid "Source Analysis Preferences"
msgstr ""

#: src/premain.py:955
msgid "Code Warnings Preferences"
msgstr ""

#: src/premain.py:958
msgid "Source Browser Preferences"
msgstr ""

#: src/premain.py:960
msgid "Version Control Preferences"
msgstr ""

#: src/premain.py:962
msgid "Internal Preferences"
msgstr ""

#: src/singleton.py:310
msgid "Creating singletons... %s"
msgstr ""

#: src/singleton.py:737 src/singleton.py:745
msgid "Cannot find Python"
msgstr ""

#: src/singleton.py:738
msgid ""
"A supported version of Python could not be found.  If you have a recent "
"Python, be sure you also have a recent version of Wing.  If you do not have "
"Python on your system, you will need to install it before most of Wing's "
"features will function properly.  If Python is already installed, use "
"Project Properties in the Project menu to select the Python Executable to "
"use."
msgstr ""

#: src/singleton.py:746
msgid ""
"A supported version of Python could not be found.  If you have a recent "
"Python, be sure you also have a recent version of Wing.  If you do not have "
"Python on your system, you will need to install it before most of Wing's "
"features will function properly.  If Python is already installed, use "
"Configure Python in the Edit menu to select the Python Executable to use."
msgstr ""

#: src/singleton.py:869
msgid "Enter Command Arguments"
msgstr ""

#: src/singleton.py:1241
msgid "Wing"
msgstr ""

#: src/startwing.py:859
msgid "Use console_%s to print a diagnostic log while running."
msgstr ""

#: src/startwing.py:862
msgid "--verbose                  Print a diagnostic log while running"
msgstr ""

#: src/startwing.py:866
msgid ""
"--get-login-env=yes|no     Enable/disable using sh -l to get environment\n"
"                           from a login shell [Mac only]"
msgstr ""

#: src/startwing.py:872
msgid ""
"Wing %(product)s Command Line Usage:\n"
"\n"
"%(execname)s <args> [<project>.wpr] [file1[:lineno], ...]\n"
"\n"
"Optionally specify a project to open and/or a list of files.  Filenames\n"
"may be followed by ':' and a line number to scroll to that line.\n"
"\n"
"Valid arguments are:\n"
"  \n"
"--prefs-file=<filename>    Set preferences override file.  Any preferences\n"
"                           in the file override those in the default user\n"
"                           preferences file and any changes made during the\n"
"                           session are written to the override file.\n"
"                             \n"
"--new                      Force creation of a new instance of Wing even if\n"
"                           an instance is already running.\n"
"--reuse                    Force reusing any existing instance of Wing even\n"
"                           if no files were given on the command line.\n"
"%(login_env_option)s\n"
"  \n"
"%(verbose)s\n"
"--disable-updates          Disable loading updates and run the original "
"installed\n"
"                           version of Wing\n"
"--enable-updates           Enable updates even if Wing is running from "
"source code\n"
"--help                     Show this message.\n"
"  \n"
"For details see https://wingware.com/doc/install/command-line-usage  \n"
msgstr ""

#: src/startwing.py:1209
msgid "Fatal startup error:  Exiting Wing"
msgstr ""
